name: Claude Flow CI Monitor

on:
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *' # Every 15 minutes
  push:
    branches: [main]

jobs:
  monitor-ci-health:
    runs-on: ubuntu-latest
    steps:
      - name: Initialize Claude Flow
        id: init-claude-flow
        run: |
          echo "Initializing Claude Flow monitoring..."
          
      - name: Check Repository Health
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLAUDE_FLOW_API_KEY: ${{ secrets.CLAUDE_FLOW_API_KEY }}
        run: |
          # Get open PRs
          OPEN_PRS=$(gh pr list --repo ${{ github.repository }} --json number,title,state,checks --limit 50)
          
          # Get workflow runs
          WORKFLOW_RUNS=$(gh run list --repo ${{ github.repository }} --json status,conclusion,name --limit 20)
          
          # Send to Claude Flow for analysis
          curl -X POST https://api.claude-flow.com/ci/analyze \
            -H "Authorization: Bearer $CLAUDE_FLOW_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"repo\": \"${{ github.repository }}\",
              \"open_prs\": $OPEN_PRS,
              \"workflow_runs\": $WORKFLOW_RUNS,
              \"action\": \"monitor_and_auto_merge\"
            }"

  auto-merge-ready-prs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read
      checks: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup GitHub CLI
        run: |
          gh auth setup-git
          
      - name: Find and Merge Ready PRs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLAUDE_FLOW_API_KEY: ${{ secrets.CLAUDE_FLOW_API_KEY }}
        run: |
          # Get all open PRs
          PR_NUMBERS=$(gh pr list --repo ${{ github.repository }} --json number -q '.[].number')
          
          for PR in $PR_NUMBERS; do
            echo "Checking PR #$PR..."
            
            # Get PR details with checks
            PR_DATA=$(gh pr view $PR --repo ${{ github.repository }} --json state,checks,reviews,mergeable,labels)
            
            # Check if all checks are passing
            ALL_CHECKS_PASS=$(echo $PR_DATA | jq -r '.checks | all(.state == "SUCCESS")')
            IS_MERGEABLE=$(echo $PR_DATA | jq -r '.mergeable == "MERGEABLE"')
            HAS_APPROVAL=$(echo $PR_DATA | jq -r '.reviews | any(.state == "APPROVED")')
            
            if [[ "$ALL_CHECKS_PASS" == "true" ]] && [[ "$IS_MERGEABLE" == "true" ]]; then
              echo "PR #$PR is ready to merge!"
              
              # Double-check with Claude Flow
              CLAUDE_DECISION=$(curl -s -X POST https://api.claude-flow.com/ci/merge-decision \
                -H "Authorization: Bearer $CLAUDE_FLOW_API_KEY" \
                -H "Content-Type: application/json" \
                -d "{
                  \"repo\": \"${{ github.repository }}\",
                  \"pr\": $PR,
                  \"checks_pass\": true,
                  \"has_approval\": $HAS_APPROVAL
                }" | jq -r '.should_merge')
              
              if [[ "$CLAUDE_DECISION" == "true" ]]; then
                # Add auto-merge label
                gh pr edit $PR --add-label "ready-to-merge" --repo ${{ github.repository }}
                
                # Merge the PR
                gh pr merge $PR --repo ${{ github.repository }} --squash --delete-branch
                
                echo "âœ… Merged PR #$PR"
                
                # Notify Claude Flow
                curl -X POST https://api.claude-flow.com/ci/merged \
                  -H "Authorization: Bearer $CLAUDE_FLOW_API_KEY" \
                  -H "Content-Type: application/json" \
                  -d "{
                    \"repo\": \"${{ github.repository }}\",
                    \"pr\": $PR,
                    \"merged_at\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"
                  }"
              fi
            else
              echo "PR #$PR is not ready (checks: $ALL_CHECKS_PASS, mergeable: $IS_MERGEABLE)"
            fi
          done

  deploy-after-merge:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [auto-merge-ready-prs]
    steps:
      - uses: actions/checkout@v4
      
      - name: Trigger Production Deployment
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          CLAUDE_FLOW_API_KEY: ${{ secrets.CLAUDE_FLOW_API_KEY }}
        run: |
          # Notify Claude Flow about deployment
          curl -X POST https://api.claude-flow.com/deploy/notify \
            -H "Authorization: Bearer $CLAUDE_FLOW_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              \"repo\": \"${{ github.repository }}\",
              \"commit\": \"${{ github.sha }}\",
              \"environment\": \"production\",
              \"trigger\": \"auto-merge\"
            }'
            
          # Trigger Vercel deployment
          vercel --prod --token=$VERCEL_TOKEN --yes