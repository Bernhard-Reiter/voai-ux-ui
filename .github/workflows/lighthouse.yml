name: Lighthouse CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]

env:
  LIGHTHOUSE_THRESHOLD: 95

jobs:
  lighthouse:
    name: Lighthouse Performance Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm turbo run build --filter=@voai/frontend
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Start production server
        run: |
          cd apps/frontend
          pnpm start &
          sleep 10

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/about
            http://localhost:3000/features
            http://localhost:3000/pricing
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Validate Lighthouse scores
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('.lighthouseci/lhr-*.json', 'utf8'));
            const scores = results.categories;

            const thresholds = {
              performance: 0.95,
              accessibility: 0.95,
              'best-practices': 0.95,
              seo: 0.95,
              pwa: 0.90
            };

            let failed = false;
            let report = '## üö¶ Lighthouse Results\n\n';

            for (const [category, threshold] of Object.entries(thresholds)) {
              const score = scores[category]?.score || 0;
              const passed = score >= threshold;
              const emoji = passed ? '‚úÖ' : '‚ùå';
              const percentage = Math.round(score * 100);
              
              report += `${emoji} **${category}**: ${percentage}/100 (threshold: ${threshold * 100})\n`;
              
              if (!passed) {
                failed = true;
                console.error(`${category} score ${score} is below threshold ${threshold}`);
              }
            }

            // Comment on PR
            if (context.eventName === 'pull_request') {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: report
              });
            }

            if (failed) {
              core.setFailed('Lighthouse scores below threshold');
            }
